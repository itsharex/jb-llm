/*    */ package ai.grazie.auth.model.feedback;@Serializable @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000`\n\002\030\002\n\002\030\002\n\002\030\002\n\000\n\002\020\b\n\000\n\002\030\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\000\n\002\030\002\n\000\n\002\030\002\n\002\b\021\n\002\020\013\n\000\n\002\020\000\n\002\b\002\n\002\020\016\n\000\n\002\020\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\002\b\003\b\b\030\000 /2\b\022\004\022\0020\0020\001:\002./BK\b\027\022\006\020\003\032\0020\004\022\b\020\005\032\004\030\0010\006\022\b\020\007\032\004\030\0010\002\022\b\020\b\032\004\030\0010\t\022\b\020\n\032\004\030\0010\013\022\b\020\f\032\004\030\0010\r\022\b\020\016\032\004\030\0010\017¢\006\002\020\020B\035\022\006\020\005\032\0020\006\022\006\020\007\032\0020\002\022\006\020\b\032\0020\t¢\006\002\020\021J\t\020\034\032\0020\006HÆ\003J\t\020\035\032\0020\002HÆ\003J\t\020\036\032\0020\tHÆ\003J'\020\037\032\0020\0002\b\b\002\020\005\032\0020\0062\b\b\002\020\007\032\0020\0022\b\b\002\020\b\032\0020\tHÆ\001J\023\020 \032\0020!2\b\020\"\032\004\030\0010#HÖ\003J\t\020$\032\0020\004HÖ\001J\t\020%\032\0020&HÖ\001J!\020'\032\0020(2\006\020)\032\0020\0002\006\020*\032\0020+2\006\020,\032\0020-HÇ\001R\024\020\007\032\0020\002X\004¢\006\b\n\000\032\004\b\022\020\023R\024\020\b\032\0020\tX\004¢\006\b\n\000\032\004\b\024\020\025R\024\020\005\032\0020\006X\004¢\006\b\n\000\032\004\b\026\020\027R\021\020\n\032\0020\013¢\006\b\n\000\032\004\b\030\020\031R\024\020\f\032\0020\rX\004¢\006\b\n\000\032\004\b\032\020\033¨\0060"}, d2 = {"Lai/grazie/auth/model/feedback/CorrectionFalsePositive;", "Lai/grazie/auth/model/feedback/UserFeedback;", "Lai/grazie/auth/model/feedback/FalsePositiveContext;", "seen1", "", "language", "Lai/grazie/nlp/langs/Language;", "context", "data", "Lai/grazie/auth/model/feedback/FeedbackAdditionalData;", "service", "Lai/grazie/gec/model/CorrectionServiceType;", "type", "Lai/grazie/auth/model/feedback/FeedbackErrorType;", "serializationConstructorMarker", "Lkotlinx/serialization/internal/SerializationConstructorMarker;", "(ILai/grazie/nlp/langs/Language;Lai/grazie/auth/model/feedback/FalsePositiveContext;Lai/grazie/auth/model/feedback/FeedbackAdditionalData;Lai/grazie/gec/model/CorrectionServiceType;Lai/grazie/auth/model/feedback/FeedbackErrorType;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V", "(Lai/grazie/nlp/langs/Language;Lai/grazie/auth/model/feedback/FalsePositiveContext;Lai/grazie/auth/model/feedback/FeedbackAdditionalData;)V", "getContext", "()Lai/grazie/auth/model/feedback/FalsePositiveContext;", "getData", "()Lai/grazie/auth/model/feedback/FeedbackAdditionalData;", "getLanguage", "()Lai/grazie/nlp/langs/Language;", "getService", "()Lai/grazie/gec/model/CorrectionServiceType;", "getType", "()Lai/grazie/auth/model/feedback/FeedbackErrorType;", "component1", "component2", "component3", "copy", "equals", "", "other", "", "hashCode", "toString", "", "write$Self", "", "self", "output", "Lkotlinx/serialization/encoding/CompositeEncoder;", "serialDesc", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "$serializer", "Companion", "auth-model"}) public final class CorrectionFalsePositive extends UserFeedback<FalsePositiveContext> { @NotNull
/*    */   public static final Companion Companion = new Companion(null); @NotNull
/*    */   private final Language language; @NotNull
/*    */   private final FalsePositiveContext context; @NotNull
/*    */   private final FeedbackAdditionalData data; @NotNull
/*    */   private final CorrectionServiceType service; @NotNull
/*    */   private final FeedbackErrorType type; @JvmStatic
/*  8 */   public static final void write$Self(@NotNull CorrectionFalsePositive self, @NotNull CompositeEncoder output, @NotNull SerialDescriptor serialDesc) { Intrinsics.checkNotNullParameter(self, "self"); Intrinsics.checkNotNullParameter(output, "output"); Intrinsics.checkNotNullParameter(serialDesc, "serialDesc"); UserFeedback.write$Self(self, output, serialDesc, (KSerializer)FalsePositiveContext.$serializer.INSTANCE); output.encodeSerializableElement(serialDesc, 0, (SerializationStrategy)Language.Serializer.INSTANCE, self.getLanguage()); output.encodeSerializableElement(serialDesc, 1, (SerializationStrategy)FalsePositiveContext.$serializer.INSTANCE, self.getContext()); output.encodeSerializableElement(serialDesc, 2, (SerializationStrategy)FeedbackAdditionalData.$serializer.INSTANCE, self.getData()); if (output.shouldEncodeElementDefault(serialDesc, 3) ? true : (
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */       
/* 15 */       (self.service != self.getContext().getCorrection().getService())))
/* 16 */       output.encodeSerializableElement(serialDesc, 3, (SerializationStrategy)new EnumSerializer("ai.grazie.gec.model.CorrectionServiceType", (Enum[])CorrectionServiceType.values()), self.service);  if (output.shouldEncodeElementDefault(serialDesc, 4) ? true : ((self.getType() != FeedbackErrorType.FALSE_POSITIVE))) output.encodeSerializableElement(serialDesc, 4, (SerializationStrategy)FeedbackErrorType.$serializer.INSTANCE, self.getType());  } @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/auth/model/feedback/CorrectionFalsePositive.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/auth/model/feedback/CorrectionFalsePositive;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "auth-model"}) public static final class $serializer implements GeneratedSerializer<CorrectionFalsePositive> { @NotNull public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer = new KSerializer[5]; arrayOfKSerializer[0] = (KSerializer)Language.Serializer.INSTANCE; arrayOfKSerializer[1] = (KSerializer)FalsePositiveContext.$serializer.INSTANCE; arrayOfKSerializer[2] = (KSerializer)FeedbackAdditionalData.$serializer.INSTANCE; arrayOfKSerializer[3] = (KSerializer)new EnumSerializer("ai.grazie.gec.model.CorrectionServiceType", (Enum[])CorrectionServiceType.values()); arrayOfKSerializer[4] = (KSerializer)FeedbackErrorType.$serializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer; } @NotNull public CorrectionFalsePositive deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; Object object1 = null, object2 = null, object3 = null, object4 = null, object5 = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); if (compositeDecoder.decodeSequentially()) { object1 = compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)Language.Serializer.INSTANCE, object1); i |= 0x1; object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)FalsePositiveContext.$serializer.INSTANCE, object2); i |= 0x2; object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)FeedbackAdditionalData.$serializer.INSTANCE, object3); i |= 0x4; object4 = compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)new EnumSerializer("ai.grazie.gec.model.CorrectionServiceType", (Enum[])CorrectionServiceType.values()), object4); i |= 0x8; object5 = compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)FeedbackErrorType.$serializer.INSTANCE, object5); i |= 0x10; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: object1 = compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)Language.Serializer.INSTANCE, object1); i |= 0x1; continue;case 1: object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)FalsePositiveContext.$serializer.INSTANCE, object2); i |= 0x2; continue;case 2: object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)FeedbackAdditionalData.$serializer.INSTANCE, object3); i |= 0x4; continue;case 3: object4 = compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)new EnumSerializer("ai.grazie.gec.model.CorrectionServiceType", (Enum[])CorrectionServiceType.values()), object4); i |= 0x8; continue;case 4: object5 = compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)FeedbackErrorType.$serializer.INSTANCE, object5); i |= 0x10; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new CorrectionFalsePositive(i, (Language)object1, (FalsePositiveContext)object2, (FeedbackAdditionalData)object3, (CorrectionServiceType)object4, (FeedbackErrorType)object5, null); } public void serialize(@NotNull Encoder encoder, @NotNull CorrectionFalsePositive value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); CorrectionFalsePositive.write$Self(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.auth.model.feedback.CorrectionFalsePositive", INSTANCE, 5); pluginGeneratedSerialDescriptor.addElement("language", false); pluginGeneratedSerialDescriptor.addElement("context", false); pluginGeneratedSerialDescriptor.addElement("data", false); pluginGeneratedSerialDescriptor.addElement("service", true); pluginGeneratedSerialDescriptor.addElement("type", true); descriptor = pluginGeneratedSerialDescriptor; } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/auth/model/feedback/CorrectionFalsePositive$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/auth/model/feedback/CorrectionFalsePositive;", "auth-model"}) public static final class Companion { private Companion() {} @NotNull public final KSerializer<CorrectionFalsePositive> serializer() { return (KSerializer<CorrectionFalsePositive>)CorrectionFalsePositive.$serializer.INSTANCE; } } public CorrectionFalsePositive(@NotNull Language language, @NotNull FalsePositiveContext context, @NotNull FeedbackAdditionalData data) { super(null); this.language = language; this.context = context; this.data = data; this.service = getContext().getCorrection().getService(); this.type = FeedbackErrorType.FALSE_POSITIVE; } @NotNull public Language getLanguage() { return this.language; } @NotNull public FalsePositiveContext getContext() { return this.context; } @NotNull public FeedbackAdditionalData getData() { return this.data; } @NotNull public final CorrectionServiceType getService() { return this.service; } @NotNull public FeedbackErrorType getType() { return this.type; }
/*    */ 
/*    */   
/*    */   @NotNull
/*    */   public final Language component1() {
/*    */     return getLanguage();
/*    */   }
/*    */   
/*    */   @NotNull
/*    */   public final FalsePositiveContext component2() {
/*    */     return getContext();
/*    */   }
/*    */   
/*    */   @NotNull
/*    */   public final FeedbackAdditionalData component3() {
/*    */     return getData();
/*    */   }
/*    */   
/*    */   @NotNull
/*    */   public final CorrectionFalsePositive copy(@NotNull Language language, @NotNull FalsePositiveContext context, @NotNull FeedbackAdditionalData data) {
/*    */     Intrinsics.checkNotNullParameter(language, "language");
/*    */     Intrinsics.checkNotNullParameter(context, "context");
/*    */     Intrinsics.checkNotNullParameter(data, "data");
/*    */     return new CorrectionFalsePositive(language, context, data);
/*    */   }
/*    */   
/*    */   @NotNull
/*    */   public String toString() {
/*    */     return "CorrectionFalsePositive(language=" + getLanguage() + ", context=" + getContext() + ", data=" + getData() + ")";
/*    */   }
/*    */   
/*    */   public int hashCode() {
/*    */     result = getLanguage().hashCode();
/*    */     result = result * 31 + getContext().hashCode();
/*    */     return result * 31 + getData().hashCode();
/*    */   }
/*    */   
/*    */   public boolean equals(@Nullable Object other) {
/*    */     if (this == other)
/*    */       return true; 
/*    */     if (!(other instanceof CorrectionFalsePositive))
/*    */       return false; 
/*    */     CorrectionFalsePositive correctionFalsePositive = (CorrectionFalsePositive)other;
/*    */     return (getLanguage() != correctionFalsePositive.getLanguage()) ? false : (!Intrinsics.areEqual(getContext(), correctionFalsePositive.getContext()) ? false : (!!Intrinsics.areEqual(getData(), correctionFalsePositive.getData())));
/*    */   } }


/* Location:              /Volumes/Macintosh HD/Users/phodal/Desktop/ml-llm.jar!/ai/grazie/auth/model/feedback/CorrectionFalsePositive.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */
/*    */ package ai.grazie.api.gateway.api.metrics.trf;
/*    */ import kotlinx.serialization.KSerializer;
/*    */ import kotlinx.serialization.descriptors.SerialDescriptor;
/*    */ import kotlinx.serialization.encoding.CompositeDecoder;
/*    */ 
/*    */ @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN)
/*    */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/api/gateway/api/metrics/trf/SynReportData.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/api/gateway/api/metrics/trf/SynReportData;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "api-gateway-api"})
/*    */ public final class $serializer implements GeneratedSerializer<SynReportData> {
/*    */   @NotNull
/* 10 */   public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer = new KSerializer[8]; arrayOfKSerializer[0] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer[1] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer[2] = BuiltinSerializersKt.getNullable((KSerializer)IntSerializer.INSTANCE); arrayOfKSerializer[3] = (KSerializer)IntSerializer.INSTANCE; arrayOfKSerializer[4] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer[5] = (KSerializer)TextRange$.serializer.INSTANCE; arrayOfKSerializer[6] = (KSerializer)Language.Serializer.INSTANCE; arrayOfKSerializer[7] = (KSerializer)new ReferenceArraySerializer(Reflection.getOrCreateKotlinClass(String.class), (KSerializer)StringSerializer.INSTANCE); return (KSerializer<?>[])arrayOfKSerializer; } @NotNull public SynReportData deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; boolean bool1 = false, bool2 = false; Object object1 = null; int j = 0; String str = null; Object object2 = null, object3 = null, object4 = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); if (compositeDecoder.decodeSequentially()) { bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 0); i |= 0x1; bool2 = compositeDecoder.decodeBooleanElement(serialDescriptor, 1); i |= 0x2; object1 = compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 2, (DeserializationStrategy)IntSerializer.INSTANCE, object1); i |= 0x4; j = compositeDecoder.decodeIntElement(serialDescriptor, 3); i |= 0x8; str = compositeDecoder.decodeStringElement(serialDescriptor, 4); i |= 0x10; object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 5, (DeserializationStrategy)TextRange$.serializer.INSTANCE, object2); i |= 0x20; object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 6, (DeserializationStrategy)Language.Serializer.INSTANCE, object3); i |= 0x40; object4 = compositeDecoder.decodeSerializableElement(serialDescriptor, 7, (DeserializationStrategy)new ReferenceArraySerializer(Reflection.getOrCreateKotlinClass(String.class), (KSerializer)StringSerializer.INSTANCE), object4); i |= 0x80; } else { while (bool) { int k = compositeDecoder.decodeElementIndex(serialDescriptor); switch (k) { case -1: bool = false; continue;case 0: bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 0); i |= 0x1; continue;case 1: bool2 = compositeDecoder.decodeBooleanElement(serialDescriptor, 1); i |= 0x2; continue;case 2: object1 = compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 2, (DeserializationStrategy)IntSerializer.INSTANCE, object1); i |= 0x4; continue;case 3: j = compositeDecoder.decodeIntElement(serialDescriptor, 3); i |= 0x8; continue;case 4: str = compositeDecoder.decodeStringElement(serialDescriptor, 4); i |= 0x10; continue;case 5: object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 5, (DeserializationStrategy)TextRange$.serializer.INSTANCE, object2); i |= 0x20; continue;case 6: object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 6, (DeserializationStrategy)Language.Serializer.INSTANCE, object3); i |= 0x40; continue;case 7: object4 = compositeDecoder.decodeSerializableElement(serialDescriptor, 7, (DeserializationStrategy)new ReferenceArraySerializer(Reflection.getOrCreateKotlinClass(String.class), (KSerializer)StringSerializer.INSTANCE), object4); i |= 0x80; continue; }  throw new UnknownFieldException(k); }  }  compositeDecoder.endStructure(serialDescriptor); return new SynReportData(i, bool1, bool2, (Integer)object1, j, str, (TextRange)object2, (Language)object3, (String[])object4, null); } public void serialize(@NotNull Encoder encoder, @NotNull SynReportData value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); SynReportData.write$Self(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.api.gateway.api.metrics.trf.SynReportData", INSTANCE, 8); pluginGeneratedSerialDescriptor.addElement("wasDisplayed", false); pluginGeneratedSerialDescriptor.addElement("wasChosen", false); pluginGeneratedSerialDescriptor.addElement("chosenIndex", false); pluginGeneratedSerialDescriptor.addElement("timeOfDisplaySeconds", false); pluginGeneratedSerialDescriptor.addElement("text", false); pluginGeneratedSerialDescriptor.addElement("range", false); pluginGeneratedSerialDescriptor.addElement("language", false); pluginGeneratedSerialDescriptor.addElement("synonyms", false); descriptor = pluginGeneratedSerialDescriptor; }
/*    */ 
/*    */ }


/* Location:              /Volumes/Macintosh HD/Users/phodal/Desktop/ml-llm.jar!/ai/grazie/api/gateway/api/metrics/trf/SynReportData$$serializer.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */
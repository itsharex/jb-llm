/*    */ package ai.grazie.api.gateway.api.metrics.gec;@Serializable
/*    */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000T\n\002\030\002\n\002\030\002\n\000\n\002\020\b\n\000\n\002\020\013\n\000\n\002\030\002\n\000\n\002\020\016\n\000\n\002\030\002\n\000\n\002\030\002\n\000\n\002\030\002\n\002\b\024\n\002\020\000\n\002\b\003\n\002\020\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\002\b\004\b\b\030\000 /2\0020\001:\003./0BI\b\027\022\006\020\002\032\0020\003\022\006\020\004\032\0020\005\022\b\020\006\032\004\030\0010\007\022\b\020\b\032\004\030\0010\t\022\b\020\n\032\004\030\0010\013\022\b\020\f\032\004\030\0010\r\022\b\020\016\032\004\030\0010\017¢\006\002\020\020B-\022\006\020\004\032\0020\005\022\006\020\006\032\0020\007\022\006\020\b\032\0020\t\022\006\020\n\032\0020\013\022\006\020\f\032\0020\r¢\006\002\020\021J\t\020\034\032\0020\005HÆ\003J\t\020\035\032\0020\007HÆ\003J\t\020\036\032\0020\tHÆ\003J\t\020\037\032\0020\013HÆ\003J\t\020 \032\0020\rHÆ\003J;\020!\032\0020\0002\b\b\002\020\004\032\0020\0052\b\b\002\020\006\032\0020\0072\b\b\002\020\b\032\0020\t2\b\b\002\020\n\032\0020\0132\b\b\002\020\f\032\0020\rHÆ\001J\023\020\"\032\0020\0052\b\020#\032\004\030\0010$HÖ\003J\t\020%\032\0020\003HÖ\001J\t\020&\032\0020\tHÖ\001J!\020'\032\0020(2\006\020)\032\0020\0002\006\020*\032\0020+2\006\020,\032\0020-HÇ\001R\021\020\n\032\0020\013¢\006\b\n\000\032\004\b\022\020\023R\021\020\006\032\0020\007¢\006\b\n\000\032\004\b\024\020\025R\021\020\f\032\0020\r¢\006\b\n\000\032\004\b\026\020\027R\021\020\b\032\0020\t¢\006\b\n\000\032\004\b\030\020\031R\024\020\004\032\0020\005X\004¢\006\b\n\000\032\004\b\032\020\033¨\0061"}, d2 = {"Lai/grazie/api/gateway/api/metrics/gec/GecReportData;", "Lai/grazie/api/gateway/api/metrics/ReportData;", "seen1", "", "wasDisplayed", "", "operation", "Lai/grazie/api/gateway/api/metrics/gec/GecReportData$Operation;", "sentences", "", "language", "Lai/grazie/nlp/langs/Language;", "problem", "Lai/grazie/gec/model/problem/Problem;", "serializationConstructorMarker", "Lkotlinx/serialization/internal/SerializationConstructorMarker;", "(IZLai/grazie/api/gateway/api/metrics/gec/GecReportData$Operation;Ljava/lang/String;Lai/grazie/nlp/langs/Language;Lai/grazie/gec/model/problem/Problem;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V", "(ZLai/grazie/api/gateway/api/metrics/gec/GecReportData$Operation;Ljava/lang/String;Lai/grazie/nlp/langs/Language;Lai/grazie/gec/model/problem/Problem;)V", "getLanguage", "()Lai/grazie/nlp/langs/Language;", "getOperation", "()Lai/grazie/api/gateway/api/metrics/gec/GecReportData$Operation;", "getProblem", "()Lai/grazie/gec/model/problem/Problem;", "getSentences", "()Ljava/lang/String;", "getWasDisplayed", "()Z", "component1", "component2", "component3", "component4", "component5", "copy", "equals", "other", "", "hashCode", "toString", "write$Self", "", "self", "output", "Lkotlinx/serialization/encoding/CompositeEncoder;", "serialDesc", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "$serializer", "Companion", "Operation", "api-gateway-api"})
/*    */ public final class GecReportData extends ReportData { @NotNull
/*    */   public static final Companion Companion = new Companion(null); private final boolean wasDisplayed; @NotNull
/*    */   private final Operation operation; @NotNull
/*    */   private final String sentences; @NotNull
/*    */   private final Language language; @NotNull
/*    */   private final Problem problem;
/*    */   @JvmStatic
/* 10 */   public static final void write$Self(@NotNull GecReportData self, @NotNull CompositeEncoder output, @NotNull SerialDescriptor serialDesc) { Intrinsics.checkNotNullParameter(self, "self"); Intrinsics.checkNotNullParameter(output, "output"); Intrinsics.checkNotNullParameter(serialDesc, "serialDesc"); output.encodeBooleanElement(serialDesc, 0, self.getWasDisplayed()); output.encodeSerializableElement(serialDesc, 1, (SerializationStrategy)new EnumSerializer("ai.grazie.api.gateway.api.metrics.gec.GecReportData.Operation", (Enum[])Operation.values()), self.operation); output.encodeStringElement(serialDesc, 2, self.sentences); output.encodeSerializableElement(serialDesc, 3, (SerializationStrategy)Language.Serializer.INSTANCE, self.language); output.encodeSerializableElement(serialDesc, 4, (SerializationStrategy)Problem$.serializer.INSTANCE, self.problem); } @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/api/gateway/api/metrics/gec/GecReportData.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/api/gateway/api/metrics/gec/GecReportData;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "api-gateway-api"}) public static final class $serializer implements GeneratedSerializer<GecReportData> { @NotNull public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer = new KSerializer[5]; arrayOfKSerializer[0] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer[1] = (KSerializer)new EnumSerializer("ai.grazie.api.gateway.api.metrics.gec.GecReportData.Operation", (Enum[])GecReportData.Operation.values()); arrayOfKSerializer[2] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer[3] = (KSerializer)Language.Serializer.INSTANCE; arrayOfKSerializer[4] = (KSerializer)Problem$.serializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer; } @NotNull public GecReportData deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; boolean bool1 = false; Object object1 = null; String str = null; Object object2 = null, object3 = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); if (compositeDecoder.decodeSequentially()) { bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 0); i |= 0x1; object1 = compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)new EnumSerializer("ai.grazie.api.gateway.api.metrics.gec.GecReportData.Operation", (Enum[])GecReportData.Operation.values()), object1); i |= 0x2; str = compositeDecoder.decodeStringElement(serialDescriptor, 2); i |= 0x4; object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)Language.Serializer.INSTANCE, object2); i |= 0x8; object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)Problem$.serializer.INSTANCE, object3); i |= 0x10; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 0); i |= 0x1; continue;case 1: object1 = compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)new EnumSerializer("ai.grazie.api.gateway.api.metrics.gec.GecReportData.Operation", (Enum[])GecReportData.Operation.values()), object1); i |= 0x2; continue;case 2: str = compositeDecoder.decodeStringElement(serialDescriptor, 2); i |= 0x4; continue;case 3: object2 = compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)Language.Serializer.INSTANCE, object2); i |= 0x8; continue;case 4: object3 = compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)Problem$.serializer.INSTANCE, object3); i |= 0x10; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new GecReportData(i, bool1, (GecReportData.Operation)object1, str, (Language)object2, (Problem)object3, null); } public void serialize(@NotNull Encoder encoder, @NotNull GecReportData value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); GecReportData.write$Self(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.api.gateway.api.metrics.gec.GecReportData", INSTANCE, 5); pluginGeneratedSerialDescriptor.addElement("wasDisplayed", false); pluginGeneratedSerialDescriptor.addElement("operation", false); pluginGeneratedSerialDescriptor.addElement("sentences", false); pluginGeneratedSerialDescriptor.addElement("language", false); pluginGeneratedSerialDescriptor.addElement("problem", false); descriptor = pluginGeneratedSerialDescriptor; } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/api/gateway/api/metrics/gec/GecReportData$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/api/gateway/api/metrics/gec/GecReportData;", "api-gateway-api"}) public static final class Companion { private Companion() {} @NotNull public final KSerializer<GecReportData> serializer() { return (KSerializer<GecReportData>)GecReportData.$serializer.INSTANCE; }
/*    */      }
/*    */   
/* 13 */   public boolean getWasDisplayed() { return this.wasDisplayed; } @NotNull
/* 14 */   public final Operation getOperation() { return this.operation; }
/*    */   @NotNull
/* 16 */   public final String getSentences() { return this.sentences; } @NotNull
/* 17 */   public final Language getLanguage() { return this.language; }
/*    */   @NotNull
/* 19 */   public final Problem getProblem() { return this.problem; } public final boolean component1() { return getWasDisplayed(); } @NotNull public final Operation component2() { return this.operation; } @NotNull public final String component3() { return this.sentences; } @NotNull public final Language component4() { return this.language; } @NotNull public final Problem component5() { return this.problem; } public GecReportData(boolean wasDisplayed, @NotNull Operation operation, @NotNull String sentences, @NotNull Language language, @NotNull Problem problem) { this.wasDisplayed = wasDisplayed; this.operation = operation; this.sentences = sentences; this.language = language; this.problem = problem;
/*    */ 
/*    */     
/* 22 */     if (getWasDisplayed() && 
/* 23 */       !((this.operation != Operation.None) ? 1 : 0)) { int $i$a$-require-GecReportData$1 = 0; String str = 
/* 24 */         "If correction was displayed correction operation"; throw new IllegalArgumentException(str.toString()); }
/*    */      }
/*    */   @NotNull public final GecReportData copy(boolean wasDisplayed, @NotNull Operation operation, @NotNull String sentences, @NotNull Language language, @NotNull Problem problem) { Intrinsics.checkNotNullParameter(operation, "operation"); Intrinsics.checkNotNullParameter(sentences, "sentences"); Intrinsics.checkNotNullParameter(language, "language"); Intrinsics.checkNotNullParameter(problem, "problem"); return new GecReportData(wasDisplayed, operation, sentences, language, problem); }
/*    */   @NotNull public String toString() { return "GecReportData(wasDisplayed=" + getWasDisplayed() + ", operation=" + this.operation + ", sentences=" + this.sentences + ", language=" + this.language + ", problem=" + this.problem + ")"; } public int hashCode() { if (getWasDisplayed())
/*    */       getWasDisplayed();  result = 1; result = result * 31 + this.operation.hashCode(); result = result * 31 + this.sentences.hashCode(); result = result * 31 + this.language.hashCode(); return result * 31 + this.problem.hashCode(); } public boolean equals(@Nullable Object other) { if (this == other)
/*    */       return true;  if (!(other instanceof GecReportData))
/*    */       return false;  GecReportData gecReportData = (GecReportData)other;
/*    */     return (getWasDisplayed() != gecReportData.getWasDisplayed()) ? false : ((this.operation != gecReportData.operation) ? false : (!Intrinsics.areEqual(this.sentences, gecReportData.sentences) ? false : ((this.language != gecReportData.language) ? false : (!!Intrinsics.areEqual(this.problem, gecReportData.problem))))); } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\f\n\002\030\002\n\002\020\020\n\002\b\006\b\001\030\0002\b\022\004\022\0020\0000\001B\007\b\002¢\006\002\020\002j\002\b\003j\002\b\004j\002\b\005j\002\b\006¨\006\007"}, d2 = {"Lai/grazie/api/gateway/api/metrics/gec/GecReportData$Operation;", "", "(Ljava/lang/String;I)V", "Applied", "Ignored", "Reported", "None", "api-gateway-api"}) public enum Operation
/*    */   {
/* 33 */     Applied,
/*    */ 
/*    */ 
/*    */ 
/*    */     
/* 38 */     Ignored,
/*    */ 
/*    */ 
/*    */ 
/*    */     
/* 43 */     Reported,
/*    */ 
/*    */ 
/*    */ 
/*    */     
/* 48 */     None;
/*    */   } }


/* Location:              /Volumes/Macintosh HD/Users/phodal/Desktop/ml-llm.jar!/ai/grazie/api/gateway/api/metrics/gec/GecReportData.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */